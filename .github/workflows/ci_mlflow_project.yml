name: CI for MLflow Project

on:
  push:
    branches:
      - master # Trigger workflow setiap ada push ke branch 'main'

jobs:
  train_model:
    runs-on: ubuntu-latest # Jalankan di runner Ubuntu terbaru

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Mengambil kode dari repositori

    - name: Setup Miniconda and Create Environment
      # Jangan berikan `environment-file` langsung ke setup-miniconda.
      # Biarkan setup-miniconda menginisialisasi conda, lalu kita buat env secara manual.
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        python-version: 3.10.0 # Make sure this matches your conda.yaml
        auto-update-conda: true
        use-mamba: true
        # Ini penting: Jangan aktifkan base environment secara otomatis
        auto-activate-base: false
        # Pastikan binari conda ada di PATH untuk step-step berikutnya
        add-to-path: true

    - name: Create Conda Environment
      # Kita akan membuat environment secara eksplisit di sini
      # Menggunakan shell: bash -l {0} untuk memastikan inisialisasi shell yang benar
      shell: bash -l {0}
      run: |
        echo "Creating conda environment 'walmart_sales_env' from conda.yaml..."
        conda env create -f MLProject/conda.yaml || true # Gunakan || true untuk tidak gagal jika sudah ada
        echo "Conda environment creation finished."
      working-directory: MLProject # Perintah conda env create dijalankan di sini

    - name: Run MLflow Project
      # Gunakan 'conda run -n' untuk menjalankan perintah di lingkungan yang spesifik
      # Ini adalah cara yang paling andal karena tidak bergantung pada status aktivasi shell global
      shell: bash -l {0} # Tetap gunakan login shell untuk robustness
      run: |
        echo "Running MLflow project within 'walmart_sales_env'..."
        conda run -n walmart_sales_env mlflow run .
        echo "MLflow project run completed."
      working-directory: MLProject # Perintah mlflow run . dijalankan di sini

    # Opsional: Langkah untuk mengunggah artefak atau hasil
    - name: Upload MLflow Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-artifacts
        path: MLProject/mlruns/ # MLflow stores runs in the mlruns/ folder by default