name: CI for MLflow Project

on:
  push:
    branches:
      - master 

jobs:
  train_model:
    runs-on: ubuntu-latest # Jalankan di runner Ubuntu terbaru

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Mengambil kode dari repositori

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        python-version: 3.10.0 # Sesuaikan dengan versi Python di conda.yaml Anda
        auto-update-conda: true
        auto-activate-base: false
        use-mamba: true # Opsional, bisa mempercepat instalasi
        # Tambahkan ini untuk memastikan conda terinisialisasi di shell
        # Tambahkan prefix miniconda ke PATH lingkungan job
        activate-environment: "false" # Jangan aktifkan environment secara otomatis
        # Pastikan kita mendapatkan output environment variabel yang diperlukan untuk aktivasi
        add-to-path: true

    - name: Set up MLflow Tracking URI
      run: |
        echo "MLFLOW_TRACKING_URI=http://127.0.0.1:5000" >> $GITHUB_ENV
      # Tidak perlu working-directory di sini karena ini variabel lingkungan global

    - name: Create Conda Environment and Run MLflow Project
      # Gunakan `bash -lc` untuk memastikan shell diinisialisasi sebagai login shell
      # yang diperlukan oleh conda init
      shell: bash -l {0} # Ini memastikan shell diinisialisasi dengan benar untuk conda
      run: |
        # Buat lingkungan conda
        conda env create -f conda.yaml
        
        # Aktifkan lingkungan conda
        # Untuk memastikan aktivasi bekerja, kita perlu menjalankan perintahnya sebagai login shell
        # Command `conda run -n environment_name your_command` adalah cara yang lebih modern
        # dan direkomendasikan untuk menjalankan perintah dalam lingkungan conda tanpa perlu `activate`.
        # Ini menghindari masalah `conda init` yang Anda alami.
        
        # Jalankan MLflow Project dalam lingkungan yang baru dibuat
        conda run -n walmart_sales_env mlflow run .
      working-directory: MLProject # Pastikan semua perintah dijalankan di dalam folder MLProject

    # Opsional: Langkah untuk mengunggah artefak atau hasil
    # - name: Upload MLflow Artifacts
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: mlflow-artifacts
    #     path: mlruns/ # MLflow menyimpan run di folder mlruns secara default