name: CI for MLflow Project

on:
  push:
    branches:
      - master # Trigger workflow setiap ada push ke branch 'master'

jobs:
  train_model:
    runs-on: ubuntu-latest # Jalankan di runner Ubuntu terbaru

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Mengambil kode dari repositori

    - name: Setup Miniconda and Create Environment
      id: setup-conda # Tambahkan ID untuk step ini agar kita bisa mengakses outputnya
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        python-version: 3.10.0
        auto-update-conda: true
        use-mamba: true
        environment-file: MLProject/conda.yaml # Path ke file conda environment Anda
        # Pastikan environment diaktifkan untuk langkah selanjutnya
        # setup-miniconda secara otomatis mengaktifkan env yang dibuat dari environment-file
        # untuk langkah-langkah berikutnya, tetapi kadang shell perlu "ditulis ulang"
        # Kita akan tetap menggunakan bash -l dan aktivasi eksplisit di step berikutnya.

    - name: Run MLflow Project
      # Ini adalah bagian terpenting untuk memastikan conda env aktif sepenuhnya
      shell: bash -l {0} # Force login shell untuk inisialisasi conda yang benar
      run: |
        # Ambil nama lingkungan dari output step 'setup-conda'
        CONDA_ENV_NAME="${{ steps.setup-conda.outputs.environment-name }}"
        
        echo "Attempting to activate conda environment: ${CONDA_ENV_NAME}"
        conda activate "${CONDA_ENV_NAME}"
        
        # Verifikasi bahwa lingkungan aktif (opsional, untuk debugging lebih lanjut)
        echo "Current active conda environment: $(conda info --json | grep -oP '(?<="active_prefix_name": ")[^"]*')"
        
        echo "Running MLflow project..."
        mlflow run . # Perintah untuk menjalankan MLflow Project
        echo "MLflow project run completed."
      working-directory: MLProject # Pastikan perintah ini dijalankan di dalam folder MLProject

    # Opsional: Langkah untuk mengunggah artefak atau hasil
    - name: Upload MLflow Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-artifacts
        path: MLProject/mlruns/ # MLflow stores runs in the mlruns/ folder by default